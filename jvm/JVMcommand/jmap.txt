jmap命令详解
    jmap是一个很重要的命令，可以查看JVM内存使用情况。jmap帮助文档

*** 重要命令
    heap、histo、dump(谨慎使用，会触发一次 Full GC,会导致STW)

导出映像文件的两种方式：
    1.手动：
        jmap -dump:live,format=b,file=myjmapfile.txt 进程id
        jmap -dump:format=b,file=myjmapfile.txt 进程id
    2.自动：
         jinfo -flag -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=./(路径)
         jinfo -flag -XX:+HeapDumpBeforeFullGC -XX:HeapDumpPath=./(路径)

参数解释：
option： 选项参数。
    pid： 需要打印配置信息的进程ID。
    executable： 产生核心dump的Java可执行文件。
    core：需要打印配置信息的核心文件。
    server-id 可选的唯一id，如果相同的远程主机上运行了多台调试服务器，用此选项参数标识服务器。
    remote server IP or hostname 远程调试服务器的IP地址或主机名。

option解释
    no option： 查看进程的内存映像信息,类似 Solaris pmap 命令。
    heap： 显示Java堆详细信息
    histo[:live]： 显示堆中对象的统计信息
    clstats：打印类加载器信息
    finalizerinfo： 显示在F-Queue队列等待Finalizer线程执行finalizer方法的对象
    dump:：生成堆转储快照
    F： 当-dump没有响应时，使用-dump或者-histo参数. 在这个模式下,live子参数无效.
    help：打印帮助信息
    J：指定传递给运行jmap的JVM的参数

1、jmap pid 查看进程的内存映像信息


2、获取堆的配置及JVM堆内存的使用情况，包括堆内存大小，新生代、老年代、元空间等
    jmap -heap 进程id

3、获取每个class的实例数目,字节数,类全名信息。如果live子参数加上后,只统计活的对象数量。
    jmap -histo:live 进程id

    查看对象数最多的对象，并按降序排序输出：
    jmap -histo <pid>|grep alibaba|sort -k 2 -g -r|less

    查看占用内存最多的最象，并按降序排序输出：
    jmap -histo <pid>|grep alibaba|sort -k 3 -g -r|less

4、获取正等候回收的对象的信息
    jmap -finalizerinfo 进程id


5、查看堆内存快照,输出jvm的heap内容到文件， live子选项是可选的，假如指定live选项,那么只输出活的对象到文件
    jmap -dump:live,format=b,file=myjmapfile.txt 进程id
    jmap -dump:format=b,file=myjmapfile.txt 进程id

6、-clstats是-permstat的替代方案，在JDK8之前，-permstat用来打印类加载器的数据
    打印Java堆内存的永久保存区域的类加载器的智能统计信息。对于每个类加载器而言，它的名称、活跃度、地址、父类加载器、它所加载的类的数量和大小都会被打印。此外，包含的字符串数量和大小也会被打印。
    jmap -clstats 进程id
